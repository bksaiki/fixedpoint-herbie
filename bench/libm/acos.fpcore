; The following FPCores are from JuliaMath's openlibm implementations

; file: e_acos.c
; descr: computes acos(x) for x in (-0.5, 0.5)
;
; acos(x) = p(x) / q(x)
;

(FPCore (x)
 :name "acos for |x| < 0.5 (fixed 64 -48)"
 :precision (fixed 64 -48)
 :pre (< -0.5 x 0.5)
 (let* ([pi2_hi 1.57079632679489655800e+00]
        [pi2_lo 6.12323399573676603587e-17]
     
        [pS0 1.66666666666666657415e-01]
        [pS1 -3.25565818622400915405e-01]
        [pS2 2.01212532134862925881e-01]
        [pS3 -4.00555345006794114027e-02]
        [pS4 7.91534994289814532176e-04]
        [pS5 3.47933107596021167570e-05]

        [qS1 -2.40339491173441421878e+00]
        [qS2 2.02094576023350569471e+00]
        [qS3 -6.88283971605453293030e-01]
        [qS4 7.70381505559019352791e-02]

        [z (* x x)]
        [p (* z (+ pS0 (* z (+ pS1 (* z (+ pS2 (* z (+ pS3 (* z (+ pS4 (* z pS5)))))))))))]
        [q (+ 1 (* z (+ qS1 (* z (+ qS2 (* z (+ qS3 (* z qS4))))))))]
        [r (/ p q)])
  (- pi2_hi (- x (- pi2_lo (* x r))))))

(FPCore (x)
 :name "acos for |x| < 0.5 (fixed 32 -24)"
 :precision (fixed 32 -24)
 :pre (< -0.5 x 0.5)
 (let* ([pi2_hi 1.57079632679489655800e+00]
        [pi2_lo 6.12323399573676603587e-17]
     
        [pS0 1.66666666666666657415e-01]
        [pS1 -3.25565818622400915405e-01]
        [pS2 2.01212532134862925881e-01]
        [pS3 -4.00555345006794114027e-02]
        [pS4 7.91534994289814532176e-04]
        [pS5 3.47933107596021167570e-05]

        [qS1 -2.40339491173441421878e+00]
        [qS2 2.02094576023350569471e+00]
        [qS3 -6.88283971605453293030e-01]
        [qS4 7.70381505559019352791e-02]

        [z (* x x)]
        [p (* z (+ pS0 (* z (+ pS1 (* z (+ pS2 (* z (+ pS3 (* z (+ pS4 (* z pS5)))))))))))]
        [q (+ 1 (* z (+ qS1 (* z (+ qS2 (* z (+ qS3 (* z qS4))))))))]
        [r (/ p q)])
  (- pi2_hi (- x (- pi2_lo (* x r))))))

; file: e_acos.c
; descr: computes acos(x) for x in (-1, -0.5)
;
; acos(x) = p(x) / q(x)
;

(FPCore (x)
 :name "acos for -1 < x < -0.5 (fixed 64 -48)"
 :precision (fixed 64 -48)
 :pre (< -1 x -0.5)
 (let* ([pi 3.14159265358979311600e+00]
        [pi2_lo 6.12323399573676603587e-17]
     
        [pS0 1.66666666666666657415e-01]
        [pS1 -3.25565818622400915405e-01]
        [pS2 2.01212532134862925881e-01]
        [pS3 -4.00555345006794114027e-02]
        [pS4 7.91534994289814532176e-04]
        [pS5 3.47933107596021167570e-05]

        [qS1 -2.40339491173441421878e+00]
        [qS2 2.02094576023350569471e+00]
        [qS3 -6.88283971605453293030e-01]
        [qS4 7.70381505559019352791e-02]

        [z (* 0.5 (+ 1 x))]
        [p (* z (+ pS0 (* z (+ pS1 (* z (+ pS2 (* z (+ pS3 (* z (+ pS4 (* z pS5)))))))))))]
        [q (+ 1 (* z (+ qS1 (* z (+ qS2 (* z (+ qS3 (* z qS4))))))))]
        [s (sqrt z)]
        [r (/ p q)]
        [w (- (* r s) pi2_lo)])
  (- pi (* 2 (+ s w)))))

(FPCore (x)
 :name "acos for -1 < x < -0.5 (fixed 32 -24)"
 :precision (fixed 32 -24)
 :pre (< -1 x -0.5)
 (let* ([pi 3.14159265358979311600e+00]
        [pi2_lo 6.12323399573676603587e-17]
     
        [pS0 1.66666666666666657415e-01]
        [pS1 -3.25565818622400915405e-01]
        [pS2 2.01212532134862925881e-01]
        [pS3 -4.00555345006794114027e-02]
        [pS4 7.91534994289814532176e-04]
        [pS5 3.47933107596021167570e-05]

        [qS1 -2.40339491173441421878e+00]
        [qS2 2.02094576023350569471e+00]
        [qS3 -6.88283971605453293030e-01]
        [qS4 7.70381505559019352791e-02]

        [z (* 0.5 (+ 1 x))]
        [p (* z (+ pS0 (* z (+ pS1 (* z (+ pS2 (* z (+ pS3 (* z (+ pS4 (* z pS5)))))))))))]
        [q (+ 1 (* z (+ qS1 (* z (+ qS2 (* z (+ qS3 (* z qS4))))))))]
        [s (sqrt z)]
        [r (/ p q)]
        [w (- (* r s) pi2_lo)])
  (- pi (* 2 (+ s w)))))
